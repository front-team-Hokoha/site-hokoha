/*
| 4.0.0 | |   |
 3.0.0 : tokens
*/

// Dépendance 
// Tokens
// @import "../../../design-tokens/oka-breakpoints-tokens.scss";
//
// @import "../../../design-tokens/oka-app-wrapper-tokens.scss";
//
//@import "grids";

//flex container definition


.subgrid {

  display:flex;
  gap : var(--grid-gap-x);
  outline :1px solid green;

  > div{
    flex-grow:1;
    outline :1px solid blue;
    
  }


  @supports (container-type: inline-size) {

    
    flex-direction: column;

    @container (min-width: #{$oka-breakpoint-xs} ) {
      flex-direction: row;
    }
    @container (min-width: #{$oka-breakpoint-sm} ) {
      
    }
  }
}

.flex-grid {

  &.-twelve {
    --grid-columns: 12 ;
  }

  //--grid-columns: 16 ;
  --gap:  var(--grid-gap-x) ;

  display: flex;
  flex-wrap: wrap;

  //gap: var(--gap-y,var(--gap,0)) var(--gap-x,var(--gap,0));
  gap: var(--grid-gap-y) var(--gap-x,var(--gap,0));
  
}


//explication de la formule calc(((100% - ( 16 - 1 ) * 1.5rem * 1/16 + ( 1 - 1 ) * 1.5rem );
$calc-span: calc(((100% - (var(--grid-columns) - 1) * var(--sub-gap)) * var(--span)/var(--grid-columns)) + (var(--span) - 1) * var(--sub-gap));

.col {

  //--span : 1;
  flex-basis: $calc-span;
  max-width: $calc-span;

}

 /* Mixin de calcul de largeur de colonne et des parametrage des sous grilles */
 @mixin col($span) {
  
  --span : #{$span} ;

  // Sous grille
  & > .flex-grid {

  @if $span > 4 {
    
      // Si sup à 4 alors 4
      --grid-columns: 4 ;

        @media only screen and (min-width: $oka-breakpoint-sm) {
          --grid-columns: #{$span} ;
        }
      
    } @else { 
      --grid-columns: #{$span} ;
    }
  
    @if $span > 8 {
      // Si sup à 8 alors 4 (le maxi pour mobile)
      --grid-columns: 4 ;

      // Si sup à 8 alors 8 (le maxi pour tablet - sm)
      @media only screen and (min-width: $oka-breakpoint-sm) {
        --grid-columns: 8 ;
      }

      // Si sup à 8 alors val pour md
      @media only screen and (min-width: $oka-breakpoint-md) {
        --grid-columns: #{$span} ;
      }
    }
  }
}

.col-1 {
  @include col( 1 );
}
.col-2 {
  @include col( 2 );
}
.col-3 {
  @include col( 3 );
}
.col-4 {
  @include col( 4 );
}
.col-5 {
  @include col( 5 );
}
.col-6 {
  @include col( 6 );
}
.col-7 {
  @include col( 7 );
}
.col-8 {
  @include col( 8 );
}
.col-9 {
  @include col( 9 );
}
.col-10 {
  @include col( 10 );
}
.col-11 {
  @include col( 11 );
}
.col-12 {
  @include col( 12 );
}
.col-13 {
  @include col( 13 );
}
.col-14 {
  @include col( 14 );
}
.col-15 {
  @include col( 15 );
}
.col-16 {
  @include col( 16 );
}

.flex-grid>* {
  flex-basis: 100%;
  //max-width: 100%;
  //min-width: 0;

  --sub-gap: var(--gap);
}


// SM
@media only screen and (min-width: $oka-breakpoint-sm) {

  .col--sm-1 {
    @include col( 1 );
  }
  .col--sm-2 {
    @include col( 2 );
  }
  .col--sm-3 {
    @include col( 3 );
  }
  .col--sm-4 {
    @include col( 4 );
  }
  .col--sm-5 {
    @include col( 5 );
  }
  .col--sm-6 {
    @include col( 6 );
  }
  .col--sm-7 {
    @include col( 7 );
  }
  .col--sm-8 {
    @include col( 8 );
  }
  .col--sm-9 {
    @include col( 9 );
  }
  .col--sm-10 {
    @include col( 10 );
  }
  .col--sm-11 {
    @include col( 11 );
  }
  .col--sm-12 {
    @include col( 12 );
  }
  .col--sm-13 {
    @include col( 13 );
  }
  .col--sm-14 {
    @include col( 14 );
  }
  .col--sm-15 {
    @include col( 15 );
  }
  .col--sm-16 {
    @include col( 16 );
  }
}

// MD 
@media only screen and (min-width: $oka-breakpoint-md) {

  .col--md-1 {
    @include col( 1 );
  }
  .col--md-2 {
    @include col( 2 );
  }
  .col--md-3 {
    @include col( 3 );
  }
  .col--md-4 {
    @include col( 4 );
  }
  .col--md-5 {
    @include col( 5 );
  }
  .col--md-6 {
    @include col( 6 );
  }
  .col--md-7 {
    @include col( 7 );
  }
  .col--md-8 {
    @include col( 8 );
  }
  .col--md-9 {
    @include col( 9 );
  }
  .col--md-10 {
    @include col( 10 );
  }
  .col--md-11 { 
    @include col( 11 );
  }
  .col--md-12 {
    @include col( 12 );
  }
  .col--md-13 {
    @include col( 13 );
  }
  .col--md-14 {
    @include col( 14 );
  }
  .col--md-15 {
    @include col( 15 );
  }
  .col--md-16 {
    @include col( 16 );
  }
  
}

// LG
@media only screen and (min-width: $oka-breakpoint-lg) {
  
  .col--lg-1 {
    @include col( 1 );
  }
  .col--lg-2 {
    @include col( 2 );
  }
  .col--lg-3 {
    @include col( 3 );
  }
  .col--lg-4 {
    @include col( 4 );
  }
  .col--lg-5 {
    @include col( 5 );
  }
  .col--lg-6 {
    @include col( 6 );
  }
  .col--lg-7 {
    @include col( 7 );
  }
  .col--lg-8 {
    @include col( 8 );
  }
  .col--lg-9 {
    @include col( 9 );
  }
  .col--lg-10 {
    @include col( 10 );
  }
  .col--lg-11 {
    @include col( 11 );
  }
  .col--lg-12 {
    @include col( 12 );
  }
  .col--lg-13 {
    @include col( 13 );
  }
  .col--lg-14 {
    @include col( 14 );
  }
  .col--lg-15 {
    @include col( 15 );
  }
  .col--lg-16 {
    @include col( 16 );
  }
}







// PREVIEW

.flex-grid-bg-fx,
.grid-bg-fx {
  display:none;
}


.showGrid .flex-grid-bg-fx,
.showGrid .grid-bg-fx {
  display:flex;
 
}


.flex-grid-bg-fx,
.grid-bg-fx {

  pointer-events: none;
  position: absolute;
  z-index:10;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  //border:2px solid green;

  align-items: center;

  

}

.flex-grid-bg-fx__grid,
.grid-bg-fx__grid {

    height: 100%;

    background-color: none !important;
    pointer-events: none;
    //position: absolute;
    //z-index:10;
    //top: 0;
    //bottom:0;

    left    : $oka-wrapper-space-inset-right;
    right   : $oka-wrapper-space-inset-left;

    right : $oka-wrapper-space-inset-right-breakpoints-md;
    left : $oka-wrapper-space-inset-left-breakpoints-md;

    grid-row-gap: 0 ;

  > * {
    position: relative;
    margin-bottom: 0 !important;
    background-color: blue !important;
    opacity:0.06;
  }

  > *::before, *::after {
    content: '';
    position: absolute;
    top: 0;
    height: 100%;
    width: 1px;
    background-color: currentColor;
    background-color: green;
    opacity:0.4;
  }

  > *::before {
    left:1rem;
  }

  > *::after {
    right: 0;
  }
}
