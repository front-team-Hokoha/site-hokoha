
---
// Layout global 

import { ViewTransitions } from 'astro:transitions';

// Composant Communs
import Header from '../components/Header.astro';
import Credits from '../components/Credits.astro';

// Reception des props passées par les pages qui utilisent ce layout
const { title } = Astro.props;
const { description } = Astro.props;
const { pageName } = Astro.props;
const { pageClass } = Astro.props;


---

<html lang="fr">
    <head>
        <meta name="robots" content="noindex, nofollow">
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale = 1.0, maximum-scale=5.0"/>
        <title>Sté HOKOHA | {title}</title>

        <meta name="description" content={description} />

          <!-- Activer la mise en cache pour 1 jour (86400 secondes) -->
  <meta http-equiv="Cache-Control" content="public, max-age=86400">

        <link rel="icon" type="image/svg+xml" href="assets/img/pictokoha.svg">

        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Noto+Serif:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">


        <style lang="scss" is:global>
            @import '../styles/main.scss';
        </style>

        <base href="/site-hokoha/">

        <!-- {# FONTAWESOME #} -->
        <script is:inline data-astro-rerun src="https://kit.fontawesome.com/b4f3e09537.js" crossorigin="anonymous"></script>


        <ViewTransitions />
    </head>
    <body class={`oka-lightMode page-${pageClass}`} >
        <div id="root" class="layout-app">
            
            <!-- <div class="heightPointGrid"></div> -->

            <slot name="hero" />

            <!-- Header -->
            <header style="position:sticky; top:0 ; z-index:20 ">
                <Header  currentPage={pageName} />
            </header>

            
            

            <!-- Corps de page -->
            <div class="layout-app__body oka-surface" style="margin-top:0">
            
                <main class="layout-app__main">
                    
                    <!-- Contenu principal -->
                    <div class="oka-appWrap">
                        <slot  />
                    </div>
                    
                    <!-- Contenu Secondaire -->
                    <slot name="secondary" />

                    <!--  -->
                    <slot name="next" />

                </main> 
                
                <!-- Footer -->
                <footer class="layout-app__footer">
                    <div class="oka-appWrap oka-darkMode">
                        <Credits />
                    </div>
                </footer>
            </div> 


           
            
            <slot name="modal" />
           
            <!-- Grid Preview -->
            <div class="flex-grid-bg-fx z-index-1 " aria-hidden="true">
                <div class="oka-app-wrap" style="height:100%">
                    <div class="grid-bg-fx__grid flex-grid ">
        
                        <div class="col col-1"></div>
                        <div class="col col-1"></div>
                        <div class="col col-1" ></div>
                        <div class="col col-1" ></div>
        
                        <div class="col col-1"></div>
                        <div class="col col-1"></div>
                        <div class="col col-1" ></div>
                        <div class="col col-1" ></div>
        
                        <div class="col col-1"></div>
                        <div class="col col-1"></div>
                        <div class="col col-1" ></div>
                        <div class="col col-1" ></div>
        
                        <div class="col col-1"></div>
                        <div class="col col-1"></div>
                        <div class="col col-1" ></div>
                        <div class="col col-1" ></div>
                    </div>
                </div>
            </div>

      </div>

      <script  is:inline data-astro-rerun >

        // Script de  déclencgement d'affichage des elements par apparition
        document.addEventListener('astro:page-load', () => {
            
            //document.addEventListener("DOMContentLoaded", () => {
            const elements = document.querySelectorAll('.appear');

            const observer = new IntersectionObserver((entries, observer) => {
                entries.forEach((entry, index) => {
                    if (entry.isIntersecting) {
                        // Ajoute un décalage entre les animations avec setTimeout
                        setTimeout(() => {
                        entry.target.classList.add('visible');
                        }, index * 200); // 200ms de décalage entre chaque élément
                        observer.unobserve(entry.target); // Arrête d'observer une fois l'élément visible
                    }
                    });
            });

            elements.forEach(element => {
                observer.observe(element);
            });
            //});

        })

      </script>

        <script  is:inline data-astro-rerun >
            /**
            * Get the value of a cookie
            * Source: https://gist.github.com/wpsmith/6cf23551dd140fb72ae7
            * @param  {String} name  The name of the cookie
            * @return {String}       The cookie value
            */
            /*
            https://stackoverflow.com/questions/5671451/creating-a-javascript-cookie-on-a-domain-and-reading-it-across-sub-domains
            */
            function getCookie (name) {
                let value = `; ${document.cookie}`;
                let parts = value.split(`; ${name}=`);
                if (parts.length === 2) return parts.pop().split(';').shift();
            }



            function setCookieMode () {
                
                var cookieName = 'mode';   
                var myDate = new Date();
                myDate.setMonth(myDate.getMonth() + 12);

                if (document.body.classList.contains('oka-darkMode')){
                    var cookieValue = 'dark';
                }else{
                    var cookieValue = 'light';
                }
                document.cookie = cookieName +"=" + cookieValue + ";expires=" + myDate + ";path=/";
           
            }

            
            function applyMode (){
           
                let mode =  getCookie('mode')
                if (mode=='dark'){
                    document.body.classList.add('oka-darkMode');
                    document.body.classList.remove('oka-lightMode');
                }else{
                    document.body.classList.remove('oka-darkMode');
                    document.body.classList.add('oka-lightMode');
                }

            }
                
            applyMode(); 


            function setCookieShowGrid () {
                var cookieName = 'showGrid';   
                var myDate = new Date();
                myDate.setMonth(myDate.getMonth() + 12);
                if (document.body.classList.contains('showGrid')){
                    //document.cookie = 'showGrid=true;';
                    var cookieValue = 'true';
                }else{
                    //document.cookie = 'showGrid=false;';
                    var cookieValue = 'false';
                }
                document.cookie = cookieName +"=" + cookieValue + ";expires=" + myDate + ";path=/";
            }

            function applyShowGrid (){
                let showGrid =  getCookie('showGrid')
                if (showGrid=='true'){
                    document.body.classList.add('showGrid');
                }else{
                    document.body.classList.remove('showGrid');
                }
            }
                
            applyShowGrid();




        </script>


<script  is:inline data-astro-rerun >
    // util_scroll-v1.js
    // UTILITAIRE : autour du scroll
    // version : 2
    // revision 2 :15/06/2019 - Ajout fonction amélioration des performance de scroll
    // Révision : 11/06/2019

    // Améliore les performance de scroll : evite des evennement de souris lors du scroll
    // livre : Css3 Pratique du design web (Eyrolles) pag : 180
    
    document.addEventListener('astro:page-load', () => {
    //(function() {
        var body = document.body
        var defaultPE = body.style.pointerEvents
        var timer

        window.addEventListener('scroll', function() {
            clearTimeout(timer);

            if (body.style.pointerEvents !== 'none') {
                body.style.pointerEvents = 'none'
            }
            timer - setTimeout(function() {
                body.style.pointerEvents = defaultPE;
            }, 500)

        }, false)
    //}())
    });

    </script>

    <script>




    // Bloque le scroll de body quand modal ouvert
    
    // Fonction Spécifique pour Safari
    // https://markus.oberlehner.net/blog/simple-solution-to-prevent-body-scrolling-on-ios/
    // src/utils/scroll-lock.js
    
    document.addEventListener('astro:page-load', () => {
    
    const $body = document.querySelector('body');
    let scrollPosition = 0;
 
    

    const enableNoScroll = function() {
        //alert('enableNoScroll')
        scrollPosition = window.pageYOffset;
        $body.style.overflow = 'hidden';
        $body.style.position = 'fixed';
        $body.style.top = `-${scrollPosition}px`;
        $body.style.width = '100%';
        //
        body.classList.add('u-noscroll');
    };

    const disableNoScroll = function() {
        //alert('disableNoScroll')
        $body.style.removeProperty('overflow');
        $body.style.removeProperty('position');
        $body.style.removeProperty('top');
        $body.style.removeProperty('width');
        window.scrollTo(0, scrollPosition);
        //
        body.classList.remove('u-noscroll');
    };

    const toggleBodyScroll= function(){
        if ($body.style.overflow == 'hidden'){
            disableNoScroll();
        }else{
            enableNoScroll()
        }
    }

    // https://stackoverflow.com/questions/9280258/prevent-body-scrolling-but-allow-overlay-scrolling #}
    var body = document.body,
        inputsModal = document.querySelectorAll('input[name="display-modal"]');

    [].forEach.call(inputsModal, function(input) {


        input.addEventListener('change', function() {
    
            
            var closeModal = this.getAttribute("id") === 'display-modal-0';

            if(!closeModal){
                //alert('noscroll');
                // PILOTE DE MODAL
                if(this.checked == false) {
                    
                    disableNoScroll();
                }else{
                   
                    enableNoScroll();
                }
            }else{
                // PILOTE DE FERMETURE MODDAL 
                body.classList.remove('u-noscroll');
                disableNoScroll();
            }

        }, false);
    });

})

    </script>
    
    
    <script  is:inline data-astro-rerun>
    // Scripts d'interactions des Modals
    document.addEventListener('astro:page-load', () => {
    // Ouverture/Fermeture suivant l'historique du navigateur
    function modalsHistory() {
        // si un noeud d'ouverture/fermeture de modal correspond au hash on l'active
        let modal = document.getElementById('display-modal-'+location.hash.substr(1));
        if (modal) {
            modal.checked=true;
        }else{
            // sinon, on ferme tous les modals.
            let NodeListModalPilot = document.querySelectorAll(".oka-modal__pilot");
            NodeListModalPilot.forEach(function (modalPilot, index) {
                modalPilot.checked = false;
            })
        }
    } 

    window.onhashchange = modalsHistory;

})
    </script>

    <script  is:inline data-astro-rerun>
      // Interactions de clavier
      function KeyPress(e) {
          var evtobj = window.event? event : e;
          // TOGGLE 8pt GRID
          if (evtobj.keyCode == 223 && evtobj.ctrlKey) {
              document.body.classList.toggle('showGrid');
          }
          // Ferme tous les modals
          if (evtobj.keyCode == 27) {
              window.location.hash='';
          }
      }
      document.onkeydown = KeyPress;
    </script>

  </body>
</html>
